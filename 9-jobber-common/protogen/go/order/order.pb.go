// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.26.1
// source: proto/order/order.proto

package order

import (
	datetime "google.golang.org/genproto/googleapis/type/datetime"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Action int32

const (
	Action_CreateOrder    Action = 0
	Action_ApproveOrder   Action = 1
	Action_UpdateGigCount Action = 2
	Action_CancelOrder    Action = 3
)

// Enum value maps for Action.
var (
	Action_name = map[int32]string{
		0: "CreateOrder",
		1: "ApproveOrder",
		2: "UpdateGigCount",
		3: "CancelOrder",
	}
	Action_value = map[string]int32{
		"CreateOrder":    0,
		"ApproveOrder":   1,
		"UpdateGigCount": 2,
		"CancelOrder":    3,
	}
)

func (x Action) Enum() *Action {
	p := new(Action)
	*p = x
	return p
}

func (x Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Action) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_order_order_proto_enumTypes[0].Descriptor()
}

func (Action) Type() protoreflect.EnumType {
	return &file_proto_order_order_proto_enumTypes[0]
}

func (x Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Action.Descriptor instead.
func (Action) EnumDescriptor() ([]byte, []int) {
	return file_proto_order_order_proto_rawDescGZIP(), []int{0}
}

type DeliveryChangeAction int32

const (
	DeliveryChangeAction_Approve DeliveryChangeAction = 0
	DeliveryChangeAction_Reject  DeliveryChangeAction = 1
)

// Enum value maps for DeliveryChangeAction.
var (
	DeliveryChangeAction_name = map[int32]string{
		0: "Approve",
		1: "Reject",
	}
	DeliveryChangeAction_value = map[string]int32{
		"Approve": 0,
		"Reject":  1,
	}
)

func (x DeliveryChangeAction) Enum() *DeliveryChangeAction {
	p := new(DeliveryChangeAction)
	*p = x
	return p
}

func (x DeliveryChangeAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeliveryChangeAction) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_order_order_proto_enumTypes[1].Descriptor()
}

func (DeliveryChangeAction) Type() protoreflect.EnumType {
	return &file_proto_order_order_proto_enumTypes[1]
}

func (x DeliveryChangeAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeliveryChangeAction.Descriptor instead.
func (DeliveryChangeAction) EnumDescriptor() ([]byte, []int) {
	return file_proto_order_order_proto_rawDescGZIP(), []int{1}
}

type OrderProps struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OngoingJobs    *int32             `protobuf:"varint,1,opt,name=OngoingJobs,json=ongoingJobs,proto3,oneof" json:"OngoingJobs,omitempty"`
	CompletedJobs  *int32             `protobuf:"varint,2,opt,name=CompletedJobs,json=completedJobs,proto3,oneof" json:"CompletedJobs,omitempty"`
	TotalEarnings  *float32           `protobuf:"fixed32,3,opt,name=TotalEarnings,json=totalEarnings,proto3,oneof" json:"TotalEarnings,omitempty"`
	GigCount       *int32             `protobuf:"varint,4,opt,name=GigCount,json=gigCount,proto3,oneof" json:"GigCount,omitempty"`
	RecentDelivery *datetime.DateTime `protobuf:"bytes,5,opt,name=RecentDelivery,json=recentDelivery,proto3,oneof" json:"RecentDelivery,omitempty"`
}

func (x *OrderProps) Reset() {
	*x = OrderProps{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_order_order_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderProps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderProps) ProtoMessage() {}

func (x *OrderProps) ProtoReflect() protoreflect.Message {
	mi := &file_proto_order_order_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderProps.ProtoReflect.Descriptor instead.
func (*OrderProps) Descriptor() ([]byte, []int) {
	return file_proto_order_order_proto_rawDescGZIP(), []int{0}
}

func (x *OrderProps) GetOngoingJobs() int32 {
	if x != nil && x.OngoingJobs != nil {
		return *x.OngoingJobs
	}
	return 0
}

func (x *OrderProps) GetCompletedJobs() int32 {
	if x != nil && x.CompletedJobs != nil {
		return *x.CompletedJobs
	}
	return 0
}

func (x *OrderProps) GetTotalEarnings() float32 {
	if x != nil && x.TotalEarnings != nil {
		return *x.TotalEarnings
	}
	return 0
}

func (x *OrderProps) GetGigCount() int32 {
	if x != nil && x.GigCount != nil {
		return *x.GigCount
	}
	return 0
}

func (x *OrderProps) GetRecentDelivery() *datetime.DateTime {
	if x != nil {
		return x.RecentDelivery
	}
	return nil
}

type SellerGigUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action     Action      `protobuf:"varint,1,opt,name=Action,json=action,proto3,enum=order.Action" json:"Action,omitempty"`
	SellerId   string      `protobuf:"bytes,2,opt,name=SellerId,json=sellerId,proto3" json:"SellerId,omitempty"`
	OrderProps *OrderProps `protobuf:"bytes,3,opt,name=OrderProps,json=orderProps,proto3,oneof" json:"OrderProps,omitempty"`
}

func (x *SellerGigUpdate) Reset() {
	*x = SellerGigUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_order_order_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SellerGigUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SellerGigUpdate) ProtoMessage() {}

func (x *SellerGigUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_order_order_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SellerGigUpdate.ProtoReflect.Descriptor instead.
func (*SellerGigUpdate) Descriptor() ([]byte, []int) {
	return file_proto_order_order_proto_rawDescGZIP(), []int{1}
}

func (x *SellerGigUpdate) GetAction() Action {
	if x != nil {
		return x.Action
	}
	return Action_CreateOrder
}

func (x *SellerGigUpdate) GetSellerId() string {
	if x != nil {
		return x.SellerId
	}
	return ""
}

func (x *SellerGigUpdate) GetOrderProps() *OrderProps {
	if x != nil {
		return x.OrderProps
	}
	return nil
}

type Offer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GigTitle        string  `protobuf:"bytes,1,opt,name=GigTitle,json=gigTitle,proto3" json:"GigTitle,omitempty"`
	Price           float32 `protobuf:"fixed32,2,opt,name=Price,json=price,proto3" json:"Price,omitempty"`
	Description     string  `protobuf:"bytes,3,opt,name=Description,json=description,proto3" json:"Description,omitempty"`
	DeliverInDays   int32   `protobuf:"varint,4,opt,name=DeliverInDays,json=deliverInDays,proto3" json:"DeliverInDays,omitempty"`
	OldDeliveryDate string  `protobuf:"bytes,5,opt,name=OldDeliveryDate,json=oldDeliveryDate,proto3" json:"OldDeliveryDate,omitempty"`
	NewDeliveryDate string  `protobuf:"bytes,6,opt,name=NewDeliveryDate,json=newDeliveryDate,proto3" json:"NewDeliveryDate,omitempty"`
	Accepted        bool    `protobuf:"varint,7,opt,name=Accepted,json=accepted,proto3" json:"Accepted,omitempty"`
	Cancelled       bool    `protobuf:"varint,8,opt,name=Cancelled,json=cancelled,proto3" json:"Cancelled,omitempty"`
	Reason          string  `protobuf:"bytes,9,opt,name=Reason,json=reason,proto3" json:"Reason,omitempty"`
}

func (x *Offer) Reset() {
	*x = Offer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_order_order_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Offer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Offer) ProtoMessage() {}

func (x *Offer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_order_order_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Offer.ProtoReflect.Descriptor instead.
func (*Offer) Descriptor() ([]byte, []int) {
	return file_proto_order_order_proto_rawDescGZIP(), []int{2}
}

func (x *Offer) GetGigTitle() string {
	if x != nil {
		return x.GigTitle
	}
	return ""
}

func (x *Offer) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Offer) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Offer) GetDeliverInDays() int32 {
	if x != nil {
		return x.DeliverInDays
	}
	return 0
}

func (x *Offer) GetOldDeliveryDate() string {
	if x != nil {
		return x.OldDeliveryDate
	}
	return ""
}

func (x *Offer) GetNewDeliveryDate() string {
	if x != nil {
		return x.NewDeliveryDate
	}
	return ""
}

func (x *Offer) GetAccepted() bool {
	if x != nil {
		return x.Accepted
	}
	return false
}

func (x *Offer) GetCancelled() bool {
	if x != nil {
		return x.Cancelled
	}
	return false
}

func (x *Offer) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type DeliveredWork struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message  string `protobuf:"bytes,1,opt,name=Message,json=message,proto3" json:"Message,omitempty"`
	File     string `protobuf:"bytes,2,opt,name=File,json=file,proto3" json:"File,omitempty"`
	FileType string `protobuf:"bytes,3,opt,name=FileType,json=fileType,proto3" json:"FileType,omitempty"`
	FileSize int64  `protobuf:"varint,4,opt,name=FileSize,json=fileSize,proto3" json:"FileSize,omitempty"`
	FileName string `protobuf:"bytes,5,opt,name=FileName,json=fileName,proto3" json:"FileName,omitempty"`
}

func (x *DeliveredWork) Reset() {
	*x = DeliveredWork{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_order_order_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliveredWork) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveredWork) ProtoMessage() {}

func (x *DeliveredWork) ProtoReflect() protoreflect.Message {
	mi := &file_proto_order_order_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveredWork.ProtoReflect.Descriptor instead.
func (*DeliveredWork) Descriptor() ([]byte, []int) {
	return file_proto_order_order_proto_rawDescGZIP(), []int{3}
}

func (x *DeliveredWork) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeliveredWork) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *DeliveredWork) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *DeliveredWork) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *DeliveredWork) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

type OrderEvents struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlaceOrder         string `protobuf:"bytes,1,opt,name=PlaceOrder,json=placeOrder,proto3" json:"PlaceOrder,omitempty"`
	Requirements       string `protobuf:"bytes,2,opt,name=Requirements,json=requirements,proto3" json:"Requirements,omitempty"`
	OrderStarted       string `protobuf:"bytes,3,opt,name=OrderStarted,json=orderStarted,proto3" json:"OrderStarted,omitempty"`
	DeliveryDateUpdate string `protobuf:"bytes,4,opt,name=DeliveryDateUpdate,json=deliveryDateUpdate,proto3" json:"DeliveryDateUpdate,omitempty"`
	OrderDelivered     string `protobuf:"bytes,5,opt,name=OrderDelivered,json=orderDelivered,proto3" json:"OrderDelivered,omitempty"`
	BuyerReview        string `protobuf:"bytes,6,opt,name=BuyerReview,json=buyerReview,proto3" json:"BuyerReview,omitempty"`
	SellerReview       string `protobuf:"bytes,7,opt,name=SellerReview,json=sellerReview,proto3" json:"SellerReview,omitempty"`
}

func (x *OrderEvents) Reset() {
	*x = OrderEvents{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_order_order_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderEvents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderEvents) ProtoMessage() {}

func (x *OrderEvents) ProtoReflect() protoreflect.Message {
	mi := &file_proto_order_order_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderEvents.ProtoReflect.Descriptor instead.
func (*OrderEvents) Descriptor() ([]byte, []int) {
	return file_proto_order_order_proto_rawDescGZIP(), []int{4}
}

func (x *OrderEvents) GetPlaceOrder() string {
	if x != nil {
		return x.PlaceOrder
	}
	return ""
}

func (x *OrderEvents) GetRequirements() string {
	if x != nil {
		return x.Requirements
	}
	return ""
}

func (x *OrderEvents) GetOrderStarted() string {
	if x != nil {
		return x.OrderStarted
	}
	return ""
}

func (x *OrderEvents) GetDeliveryDateUpdate() string {
	if x != nil {
		return x.DeliveryDateUpdate
	}
	return ""
}

func (x *OrderEvents) GetOrderDelivered() string {
	if x != nil {
		return x.OrderDelivered
	}
	return ""
}

func (x *OrderEvents) GetBuyerReview() string {
	if x != nil {
		return x.BuyerReview
	}
	return ""
}

func (x *OrderEvents) GetSellerReview() string {
	if x != nil {
		return x.SellerReview
	}
	return ""
}

type OrderReview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rating int32  `protobuf:"varint,1,opt,name=Rating,json=rating,proto3" json:"Rating,omitempty"`
	Review string `protobuf:"bytes,2,opt,name=Review,json=review,proto3" json:"Review,omitempty"`
	Date   string `protobuf:"bytes,3,opt,name=Date,json=date,proto3" json:"Date,omitempty"`
}

func (x *OrderReview) Reset() {
	*x = OrderReview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_order_order_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderReview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderReview) ProtoMessage() {}

func (x *OrderReview) ProtoReflect() protoreflect.Message {
	mi := &file_proto_order_order_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderReview.ProtoReflect.Descriptor instead.
func (*OrderReview) Descriptor() ([]byte, []int) {
	return file_proto_order_order_proto_rawDescGZIP(), []int{5}
}

func (x *OrderReview) GetRating() int32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *OrderReview) GetReview() string {
	if x != nil {
		return x.Review
	}
	return ""
}

func (x *OrderReview) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type ExtendedDelivery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginalDate        *datetime.DateTime `protobuf:"bytes,1,opt,name=OriginalDate,json=originalDate,proto3,oneof" json:"OriginalDate,omitempty"`
	NewDate             *datetime.DateTime `protobuf:"bytes,2,opt,name=NewDate,json=newDate,proto3,oneof" json:"NewDate,omitempty"`
	Days                int32              `protobuf:"varint,3,opt,name=Days,json=days,proto3" json:"Days,omitempty"`
	Reason              string             `protobuf:"bytes,4,opt,name=Reason,json=reason,proto3" json:"Reason,omitempty"`
	DeliveryDateUpdated string             `protobuf:"bytes,5,opt,name=DeliveryDateUpdated,json=deliveryDateUpdated,proto3" json:"DeliveryDateUpdated,omitempty"`
}

func (x *ExtendedDelivery) Reset() {
	*x = ExtendedDelivery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_order_order_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtendedDelivery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtendedDelivery) ProtoMessage() {}

func (x *ExtendedDelivery) ProtoReflect() protoreflect.Message {
	mi := &file_proto_order_order_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtendedDelivery.ProtoReflect.Descriptor instead.
func (*ExtendedDelivery) Descriptor() ([]byte, []int) {
	return file_proto_order_order_proto_rawDescGZIP(), []int{6}
}

func (x *ExtendedDelivery) GetOriginalDate() *datetime.DateTime {
	if x != nil {
		return x.OriginalDate
	}
	return nil
}

func (x *ExtendedDelivery) GetNewDate() *datetime.DateTime {
	if x != nil {
		return x.NewDate
	}
	return nil
}

func (x *ExtendedDelivery) GetDays() int32 {
	if x != nil {
		return x.Days
	}
	return 0
}

func (x *ExtendedDelivery) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ExtendedDelivery) GetDeliveryDateUpdated() string {
	if x != nil {
		return x.DeliveryDateUpdated
	}
	return ""
}

type OrderDocument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId             string             `protobuf:"bytes,1,opt,name=OrderId,json=orderId,proto3" json:"OrderId,omitempty"`
	InvoiceId           string             `protobuf:"bytes,2,opt,name=InvoiceId,json=invoiceId,proto3" json:"InvoiceId,omitempty"`
	PaymentIntent       string             `protobuf:"bytes,3,opt,name=PaymentIntent,json=paymentIntent,proto3" json:"PaymentIntent,omitempty"`
	GigId               string             `protobuf:"bytes,4,opt,name=GigId,json=gigId,proto3" json:"GigId,omitempty"`
	SellerId            string             `protobuf:"bytes,5,opt,name=SellerId,json=sellerId,proto3" json:"SellerId,omitempty"`
	SellerUsername      string             `protobuf:"bytes,6,opt,name=SellerUsername,json=sellerUsername,proto3" json:"SellerUsername,omitempty"`
	SellerImage         string             `protobuf:"bytes,7,opt,name=SellerImage,json=sellerImage,proto3" json:"SellerImage,omitempty"`
	SellerEmail         string             `protobuf:"bytes,8,opt,name=SellerEmail,json=sellerEmail,proto3" json:"SellerEmail,omitempty"`
	GigCoverImage       string             `protobuf:"bytes,9,opt,name=GigCoverImage,json=gigCoverImage,proto3" json:"GigCoverImage,omitempty"`
	GigMainTitle        string             `protobuf:"bytes,10,opt,name=GigMainTitle,json=gigMainTitle,proto3" json:"GigMainTitle,omitempty"`
	GigBasicTitle       string             `protobuf:"bytes,11,opt,name=GigBasicTitle,json=gigBasicTitle,proto3" json:"GigBasicTitle,omitempty"`
	GigBasicDescription string             `protobuf:"bytes,12,opt,name=GigBasicDescription,json=gigBasicDescription,proto3" json:"GigBasicDescription,omitempty"`
	BuyerId             string             `protobuf:"bytes,13,opt,name=BuyerId,json=buyerId,proto3" json:"BuyerId,omitempty"`
	BuyerUsername       string             `protobuf:"bytes,14,opt,name=BuyerUsername,json=buyerUsername,proto3" json:"BuyerUsername,omitempty"`
	BuyerEmail          string             `protobuf:"bytes,15,opt,name=BuyerEmail,json=buyerEmail,proto3" json:"BuyerEmail,omitempty"`
	BuyerImage          string             `protobuf:"bytes,16,opt,name=BuyerImage,json=buyerImage,proto3" json:"BuyerImage,omitempty"`
	Status              string             `protobuf:"bytes,17,opt,name=Status,json=status,proto3" json:"Status,omitempty"`
	Requirements        string             `protobuf:"bytes,18,opt,name=Requirements,json=requirements,proto3" json:"Requirements,omitempty"`
	Quantity            int32              `protobuf:"varint,19,opt,name=Quantity,json=quantity,proto3" json:"Quantity,omitempty"`
	Price               float32            `protobuf:"fixed32,20,opt,name=Price,json=price,proto3" json:"Price,omitempty"`
	ServiceFee          float32            `protobuf:"fixed32,21,opt,name=ServiceFee,json=serviceFee,proto3" json:"ServiceFee,omitempty"`
	Approved            bool               `protobuf:"varint,22,opt,name=Approved,json=approved,proto3" json:"Approved,omitempty"`
	Delivered           bool               `protobuf:"varint,23,opt,name=Delivered,json=delivered,proto3" json:"Delivered,omitempty"`
	Cancelled           bool               `protobuf:"varint,24,opt,name=Cancelled,json=cancelled,proto3" json:"Cancelled,omitempty"`
	ApprovedAt          *datetime.DateTime `protobuf:"bytes,25,opt,name=ApprovedAt,json=approvedAt,proto3,oneof" json:"ApprovedAt,omitempty"`
	DateOrdered         *datetime.DateTime `protobuf:"bytes,26,opt,name=DateOrdered,json=dateOrdered,proto3,oneof" json:"DateOrdered,omitempty"`
	Offer               *Offer             `protobuf:"bytes,27,opt,name=Offer,json=offer,proto3,oneof" json:"Offer,omitempty"`
	DeliveredWork       []*DeliveredWork   `protobuf:"bytes,28,rep,name=DeliveredWork,json=deliveredWork,proto3" json:"DeliveredWork,omitempty"`
	Events              *OrderEvents       `protobuf:"bytes,29,opt,name=Events,json=events,proto3,oneof" json:"Events,omitempty"`
	BuyerReview         *OrderReview       `protobuf:"bytes,30,opt,name=BuyerReview,json=buyerReview,proto3,oneof" json:"BuyerReview,omitempty"`
	SellerReview        *OrderReview       `protobuf:"bytes,31,opt,name=SellerReview,json=sellerReview,proto3,oneof" json:"SellerReview,omitempty"`
	RequestExtension    *ExtendedDelivery  `protobuf:"bytes,32,opt,name=RequestExtension,json=requestExtension,proto3,oneof" json:"RequestExtension,omitempty"`
}

func (x *OrderDocument) Reset() {
	*x = OrderDocument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_order_order_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderDocument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderDocument) ProtoMessage() {}

func (x *OrderDocument) ProtoReflect() protoreflect.Message {
	mi := &file_proto_order_order_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderDocument.ProtoReflect.Descriptor instead.
func (*OrderDocument) Descriptor() ([]byte, []int) {
	return file_proto_order_order_proto_rawDescGZIP(), []int{7}
}

func (x *OrderDocument) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *OrderDocument) GetInvoiceId() string {
	if x != nil {
		return x.InvoiceId
	}
	return ""
}

func (x *OrderDocument) GetPaymentIntent() string {
	if x != nil {
		return x.PaymentIntent
	}
	return ""
}

func (x *OrderDocument) GetGigId() string {
	if x != nil {
		return x.GigId
	}
	return ""
}

func (x *OrderDocument) GetSellerId() string {
	if x != nil {
		return x.SellerId
	}
	return ""
}

func (x *OrderDocument) GetSellerUsername() string {
	if x != nil {
		return x.SellerUsername
	}
	return ""
}

func (x *OrderDocument) GetSellerImage() string {
	if x != nil {
		return x.SellerImage
	}
	return ""
}

func (x *OrderDocument) GetSellerEmail() string {
	if x != nil {
		return x.SellerEmail
	}
	return ""
}

func (x *OrderDocument) GetGigCoverImage() string {
	if x != nil {
		return x.GigCoverImage
	}
	return ""
}

func (x *OrderDocument) GetGigMainTitle() string {
	if x != nil {
		return x.GigMainTitle
	}
	return ""
}

func (x *OrderDocument) GetGigBasicTitle() string {
	if x != nil {
		return x.GigBasicTitle
	}
	return ""
}

func (x *OrderDocument) GetGigBasicDescription() string {
	if x != nil {
		return x.GigBasicDescription
	}
	return ""
}

func (x *OrderDocument) GetBuyerId() string {
	if x != nil {
		return x.BuyerId
	}
	return ""
}

func (x *OrderDocument) GetBuyerUsername() string {
	if x != nil {
		return x.BuyerUsername
	}
	return ""
}

func (x *OrderDocument) GetBuyerEmail() string {
	if x != nil {
		return x.BuyerEmail
	}
	return ""
}

func (x *OrderDocument) GetBuyerImage() string {
	if x != nil {
		return x.BuyerImage
	}
	return ""
}

func (x *OrderDocument) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *OrderDocument) GetRequirements() string {
	if x != nil {
		return x.Requirements
	}
	return ""
}

func (x *OrderDocument) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *OrderDocument) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *OrderDocument) GetServiceFee() float32 {
	if x != nil {
		return x.ServiceFee
	}
	return 0
}

func (x *OrderDocument) GetApproved() bool {
	if x != nil {
		return x.Approved
	}
	return false
}

func (x *OrderDocument) GetDelivered() bool {
	if x != nil {
		return x.Delivered
	}
	return false
}

func (x *OrderDocument) GetCancelled() bool {
	if x != nil {
		return x.Cancelled
	}
	return false
}

func (x *OrderDocument) GetApprovedAt() *datetime.DateTime {
	if x != nil {
		return x.ApprovedAt
	}
	return nil
}

func (x *OrderDocument) GetDateOrdered() *datetime.DateTime {
	if x != nil {
		return x.DateOrdered
	}
	return nil
}

func (x *OrderDocument) GetOffer() *Offer {
	if x != nil {
		return x.Offer
	}
	return nil
}

func (x *OrderDocument) GetDeliveredWork() []*DeliveredWork {
	if x != nil {
		return x.DeliveredWork
	}
	return nil
}

func (x *OrderDocument) GetEvents() *OrderEvents {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *OrderDocument) GetBuyerReview() *OrderReview {
	if x != nil {
		return x.BuyerReview
	}
	return nil
}

func (x *OrderDocument) GetSellerReview() *OrderReview {
	if x != nil {
		return x.SellerReview
	}
	return nil
}

func (x *OrderDocument) GetRequestExtension() *ExtendedDelivery {
	if x != nil {
		return x.RequestExtension
	}
	return nil
}

type OrderMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SellerId       *string  `protobuf:"bytes,1,opt,name=SellerId,json=sellerId,proto3,oneof" json:"SellerId,omitempty"`
	BuyerId        *string  `protobuf:"bytes,2,opt,name=BuyerId,json=buyerId,proto3,oneof" json:"BuyerId,omitempty"`
	OngoingJobs    *int32   `protobuf:"varint,3,opt,name=OngoingJobs,json=ongoingJobs,proto3,oneof" json:"OngoingJobs,omitempty"`
	CompletedJobs  *int32   `protobuf:"varint,4,opt,name=CompletedJobs,json=completedJobs,proto3,oneof" json:"CompletedJobs,omitempty"`
	TotalEarnings  *float32 `protobuf:"fixed32,5,opt,name=TotalEarnings,json=totalEarnings,proto3,oneof" json:"TotalEarnings,omitempty"`
	PurchasedGigs  *string  `protobuf:"bytes,6,opt,name=PurchasedGigs,json=purchasedGigs,proto3,oneof" json:"PurchasedGigs,omitempty"`
	Type           *string  `protobuf:"bytes,7,opt,name=Type,json=type,proto3,oneof" json:"Type,omitempty"`
	Username       *string  `protobuf:"bytes,8,opt,name=Username,json=username,proto3,oneof" json:"Username,omitempty"`
	Template       *string  `protobuf:"bytes,9,opt,name=Template,json=template,proto3,oneof" json:"Template,omitempty"`
	Sender         *string  `protobuf:"bytes,10,opt,name=Sender,json=sender,proto3,oneof" json:"Sender,omitempty"`
	OfferLink      *string  `protobuf:"bytes,11,opt,name=OfferLink,json=offerLink,proto3,oneof" json:"OfferLink,omitempty"`
	Amount         *string  `protobuf:"bytes,12,opt,name=Amount,json=amount,proto3,oneof" json:"Amount,omitempty"`
	BuyerUsername  *string  `protobuf:"bytes,13,opt,name=BuyerUsername,json=buyerUsername,proto3,oneof" json:"BuyerUsername,omitempty"`
	SellerUsername *string  `protobuf:"bytes,14,opt,name=SellerUsername,json=sellerUsername,proto3,oneof" json:"SellerUsername,omitempty"`
	Title          *string  `protobuf:"bytes,15,opt,name=Title,json=title,proto3,oneof" json:"Title,omitempty"`
	Description    *string  `protobuf:"bytes,16,opt,name=Description,json=description,proto3,oneof" json:"Description,omitempty"`
	DeliveryDays   *string  `protobuf:"bytes,17,opt,name=DeliveryDays,json=deliveryDays,proto3,oneof" json:"DeliveryDays,omitempty"`
	OrderId        *string  `protobuf:"bytes,18,opt,name=OrderId,json=orderId,proto3,oneof" json:"OrderId,omitempty"`
	InvoiceId      *string  `protobuf:"bytes,19,opt,name=InvoiceId,json=invoiceId,proto3,oneof" json:"InvoiceId,omitempty"`
	OrderDue       *string  `protobuf:"bytes,20,opt,name=OrderDue,json=orderDue,proto3,oneof" json:"OrderDue,omitempty"`
	Requirements   *string  `protobuf:"bytes,21,opt,name=Requirements,json=requirements,proto3,oneof" json:"Requirements,omitempty"`
	OrderUrl       *string  `protobuf:"bytes,22,opt,name=OrderUrl,json=orderUrl,proto3,oneof" json:"OrderUrl,omitempty"`
	OriginalDate   *string  `protobuf:"bytes,23,opt,name=OriginalDate,json=originalDate,proto3,oneof" json:"OriginalDate,omitempty"`
	NewDate        *string  `protobuf:"bytes,24,opt,name=NewDate,json=newDate,proto3,oneof" json:"NewDate,omitempty"`
	Reason         *string  `protobuf:"bytes,25,opt,name=Reason,json=reason,proto3,oneof" json:"Reason,omitempty"`
	Subject        *string  `protobuf:"bytes,26,opt,name=Subject,json=subject,proto3,oneof" json:"Subject,omitempty"`
	Header         *string  `protobuf:"bytes,27,opt,name=Header,json=header,proto3,oneof" json:"Header,omitempty"`
	Total          *string  `protobuf:"bytes,28,opt,name=Total,json=total,proto3,oneof" json:"Total,omitempty"`
	Message        *string  `protobuf:"bytes,29,opt,name=Message,json=message,proto3,oneof" json:"Message,omitempty"`
	ServiceFee     *string  `protobuf:"bytes,30,opt,name=ServiceFee,json=serviceFee,proto3,oneof" json:"ServiceFee,omitempty"`
	RecentDelivery *string  `protobuf:"bytes,31,opt,name=RecentDelivery,json=recentDelivery,proto3,oneof" json:"RecentDelivery,omitempty"`
	ReceiverEmail  *string  `protobuf:"bytes,32,opt,name=ReceiverEmail,json=receiverEmail,proto3,oneof" json:"ReceiverEmail,omitempty"`
}

func (x *OrderMessage) Reset() {
	*x = OrderMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_order_order_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderMessage) ProtoMessage() {}

func (x *OrderMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_order_order_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderMessage.ProtoReflect.Descriptor instead.
func (*OrderMessage) Descriptor() ([]byte, []int) {
	return file_proto_order_order_proto_rawDescGZIP(), []int{8}
}

func (x *OrderMessage) GetSellerId() string {
	if x != nil && x.SellerId != nil {
		return *x.SellerId
	}
	return ""
}

func (x *OrderMessage) GetBuyerId() string {
	if x != nil && x.BuyerId != nil {
		return *x.BuyerId
	}
	return ""
}

func (x *OrderMessage) GetOngoingJobs() int32 {
	if x != nil && x.OngoingJobs != nil {
		return *x.OngoingJobs
	}
	return 0
}

func (x *OrderMessage) GetCompletedJobs() int32 {
	if x != nil && x.CompletedJobs != nil {
		return *x.CompletedJobs
	}
	return 0
}

func (x *OrderMessage) GetTotalEarnings() float32 {
	if x != nil && x.TotalEarnings != nil {
		return *x.TotalEarnings
	}
	return 0
}

func (x *OrderMessage) GetPurchasedGigs() string {
	if x != nil && x.PurchasedGigs != nil {
		return *x.PurchasedGigs
	}
	return ""
}

func (x *OrderMessage) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *OrderMessage) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

func (x *OrderMessage) GetTemplate() string {
	if x != nil && x.Template != nil {
		return *x.Template
	}
	return ""
}

func (x *OrderMessage) GetSender() string {
	if x != nil && x.Sender != nil {
		return *x.Sender
	}
	return ""
}

func (x *OrderMessage) GetOfferLink() string {
	if x != nil && x.OfferLink != nil {
		return *x.OfferLink
	}
	return ""
}

func (x *OrderMessage) GetAmount() string {
	if x != nil && x.Amount != nil {
		return *x.Amount
	}
	return ""
}

func (x *OrderMessage) GetBuyerUsername() string {
	if x != nil && x.BuyerUsername != nil {
		return *x.BuyerUsername
	}
	return ""
}

func (x *OrderMessage) GetSellerUsername() string {
	if x != nil && x.SellerUsername != nil {
		return *x.SellerUsername
	}
	return ""
}

func (x *OrderMessage) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *OrderMessage) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *OrderMessage) GetDeliveryDays() string {
	if x != nil && x.DeliveryDays != nil {
		return *x.DeliveryDays
	}
	return ""
}

func (x *OrderMessage) GetOrderId() string {
	if x != nil && x.OrderId != nil {
		return *x.OrderId
	}
	return ""
}

func (x *OrderMessage) GetInvoiceId() string {
	if x != nil && x.InvoiceId != nil {
		return *x.InvoiceId
	}
	return ""
}

func (x *OrderMessage) GetOrderDue() string {
	if x != nil && x.OrderDue != nil {
		return *x.OrderDue
	}
	return ""
}

func (x *OrderMessage) GetRequirements() string {
	if x != nil && x.Requirements != nil {
		return *x.Requirements
	}
	return ""
}

func (x *OrderMessage) GetOrderUrl() string {
	if x != nil && x.OrderUrl != nil {
		return *x.OrderUrl
	}
	return ""
}

func (x *OrderMessage) GetOriginalDate() string {
	if x != nil && x.OriginalDate != nil {
		return *x.OriginalDate
	}
	return ""
}

func (x *OrderMessage) GetNewDate() string {
	if x != nil && x.NewDate != nil {
		return *x.NewDate
	}
	return ""
}

func (x *OrderMessage) GetReason() string {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ""
}

func (x *OrderMessage) GetSubject() string {
	if x != nil && x.Subject != nil {
		return *x.Subject
	}
	return ""
}

func (x *OrderMessage) GetHeader() string {
	if x != nil && x.Header != nil {
		return *x.Header
	}
	return ""
}

func (x *OrderMessage) GetTotal() string {
	if x != nil && x.Total != nil {
		return *x.Total
	}
	return ""
}

func (x *OrderMessage) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *OrderMessage) GetServiceFee() string {
	if x != nil && x.ServiceFee != nil {
		return *x.ServiceFee
	}
	return ""
}

func (x *OrderMessage) GetRecentDelivery() string {
	if x != nil && x.RecentDelivery != nil {
		return *x.RecentDelivery
	}
	return ""
}

func (x *OrderMessage) GetReceiverEmail() string {
	if x != nil && x.ReceiverEmail != nil {
		return *x.ReceiverEmail
	}
	return ""
}

type PaymentIntentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Price   float32 `protobuf:"fixed32,1,opt,name=Price,json=price,proto3" json:"Price,omitempty"`
	BuyerId string  `protobuf:"bytes,2,opt,name=BuyerId,json=buyerId,proto3" json:"BuyerId,omitempty"`
}

func (x *PaymentIntentRequest) Reset() {
	*x = PaymentIntentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_order_order_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentIntentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentIntentRequest) ProtoMessage() {}

func (x *PaymentIntentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_order_order_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentIntentRequest.ProtoReflect.Descriptor instead.
func (*PaymentIntentRequest) Descriptor() ([]byte, []int) {
	return file_proto_order_order_proto_rawDescGZIP(), []int{9}
}

func (x *PaymentIntentRequest) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *PaymentIntentRequest) GetBuyerId() string {
	if x != nil {
		return x.BuyerId
	}
	return ""
}

type OrderCancelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentIntentId string        `protobuf:"bytes,1,opt,name=PaymentIntentId,proto3" json:"PaymentIntentId,omitempty"`
	OrderId         string        `protobuf:"bytes,2,opt,name=OrderId,json=orderId,proto3" json:"OrderId,omitempty"`
	OrderData       *OrderMessage `protobuf:"bytes,3,opt,name=OrderData,json=orderData,proto3" json:"OrderData,omitempty"`
}

func (x *OrderCancelRequest) Reset() {
	*x = OrderCancelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_order_order_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCancelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCancelRequest) ProtoMessage() {}

func (x *OrderCancelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_order_order_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCancelRequest.ProtoReflect.Descriptor instead.
func (*OrderCancelRequest) Descriptor() ([]byte, []int) {
	return file_proto_order_order_proto_rawDescGZIP(), []int{10}
}

func (x *OrderCancelRequest) GetPaymentIntentId() string {
	if x != nil {
		return x.PaymentIntentId
	}
	return ""
}

func (x *OrderCancelRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *OrderCancelRequest) GetOrderData() *OrderMessage {
	if x != nil {
		return x.OrderData
	}
	return nil
}

type DeliveryExtensionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId          string            `protobuf:"bytes,1,opt,name=OrderId,json=orderId,proto3" json:"OrderId,omitempty"`
	ExtendedDelivery *ExtendedDelivery `protobuf:"bytes,2,opt,name=ExtendedDelivery,json=extendedDelivery,proto3" json:"ExtendedDelivery,omitempty"`
}

func (x *DeliveryExtensionRequest) Reset() {
	*x = DeliveryExtensionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_order_order_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliveryExtensionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryExtensionRequest) ProtoMessage() {}

func (x *DeliveryExtensionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_order_order_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryExtensionRequest.ProtoReflect.Descriptor instead.
func (*DeliveryExtensionRequest) Descriptor() ([]byte, []int) {
	return file_proto_order_order_proto_rawDescGZIP(), []int{11}
}

func (x *DeliveryExtensionRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *DeliveryExtensionRequest) GetExtendedDelivery() *ExtendedDelivery {
	if x != nil {
		return x.ExtendedDelivery
	}
	return nil
}

type RequestById struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=Id,json=id,proto3" json:"Id,omitempty"`
}

func (x *RequestById) Reset() {
	*x = RequestById{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_order_order_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestById) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestById) ProtoMessage() {}

func (x *RequestById) ProtoReflect() protoreflect.Message {
	mi := &file_proto_order_order_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestById.ProtoReflect.Descriptor instead.
func (*RequestById) Descriptor() ([]byte, []int) {
	return file_proto_order_order_proto_rawDescGZIP(), []int{12}
}

func (x *RequestById) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeliveryDateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId          string               `protobuf:"bytes,1,opt,name=OrderId,json=orderId,proto3" json:"OrderId,omitempty"`
	Action           DeliveryChangeAction `protobuf:"varint,2,opt,name=Action,json=action,proto3,enum=order.DeliveryChangeAction" json:"Action,omitempty"`
	RequestExtension *ExtendedDelivery    `protobuf:"bytes,3,opt,name=RequestExtension,json=requestExtension,proto3" json:"RequestExtension,omitempty"`
}

func (x *DeliveryDateRequest) Reset() {
	*x = DeliveryDateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_order_order_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliveryDateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryDateRequest) ProtoMessage() {}

func (x *DeliveryDateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_order_order_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryDateRequest.ProtoReflect.Descriptor instead.
func (*DeliveryDateRequest) Descriptor() ([]byte, []int) {
	return file_proto_order_order_proto_rawDescGZIP(), []int{13}
}

func (x *DeliveryDateRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *DeliveryDateRequest) GetAction() DeliveryChangeAction {
	if x != nil {
		return x.Action
	}
	return DeliveryChangeAction_Approve
}

func (x *DeliveryDateRequest) GetRequestExtension() *ExtendedDelivery {
	if x != nil {
		return x.RequestExtension
	}
	return nil
}

type DeliverOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId       string         `protobuf:"bytes,1,opt,name=OrderId,json=orderId,proto3" json:"OrderId,omitempty"`
	Delivered     bool           `protobuf:"varint,2,opt,name=Delivered,json=delivered,proto3" json:"Delivered,omitempty"`
	DeliveredWork *DeliveredWork `protobuf:"bytes,3,opt,name=DeliveredWork,json=deliveredWork,proto3" json:"DeliveredWork,omitempty"`
}

func (x *DeliverOrderRequest) Reset() {
	*x = DeliverOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_order_order_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliverOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliverOrderRequest) ProtoMessage() {}

func (x *DeliverOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_order_order_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliverOrderRequest.ProtoReflect.Descriptor instead.
func (*DeliverOrderRequest) Descriptor() ([]byte, []int) {
	return file_proto_order_order_proto_rawDescGZIP(), []int{14}
}

func (x *DeliverOrderRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *DeliverOrderRequest) GetDelivered() bool {
	if x != nil {
		return x.Delivered
	}
	return false
}

func (x *DeliverOrderRequest) GetDeliveredWork() *DeliveredWork {
	if x != nil {
		return x.DeliveredWork
	}
	return nil
}

type CancelOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId       string        `protobuf:"bytes,1,opt,name=OrderId,json=orderId,proto3" json:"OrderId,omitempty"`
	PaymentIntent string        `protobuf:"bytes,2,opt,name=PaymentIntent,json=paymentIntent,proto3" json:"PaymentIntent,omitempty"`
	OrderMessage  *OrderMessage `protobuf:"bytes,3,opt,name=OrderMessage,json=orderMessage,proto3" json:"OrderMessage,omitempty"`
}

func (x *CancelOrderRequest) Reset() {
	*x = CancelOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_order_order_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelOrderRequest) ProtoMessage() {}

func (x *CancelOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_order_order_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelOrderRequest.ProtoReflect.Descriptor instead.
func (*CancelOrderRequest) Descriptor() ([]byte, []int) {
	return file_proto_order_order_proto_rawDescGZIP(), []int{15}
}

func (x *CancelOrderRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *CancelOrderRequest) GetPaymentIntent() string {
	if x != nil {
		return x.PaymentIntent
	}
	return ""
}

func (x *CancelOrderRequest) GetOrderMessage() *OrderMessage {
	if x != nil {
		return x.OrderMessage
	}
	return nil
}

type ApproveOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId      string        `protobuf:"bytes,1,opt,name=OrderId,json=orderId,proto3" json:"OrderId,omitempty"`
	OrderMessage *OrderMessage `protobuf:"bytes,2,opt,name=OrderMessage,json=orderMessage,proto3" json:"OrderMessage,omitempty"`
}

func (x *ApproveOrderRequest) Reset() {
	*x = ApproveOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_order_order_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveOrderRequest) ProtoMessage() {}

func (x *ApproveOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_order_order_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveOrderRequest.ProtoReflect.Descriptor instead.
func (*ApproveOrderRequest) Descriptor() ([]byte, []int) {
	return file_proto_order_order_proto_rawDescGZIP(), []int{16}
}

func (x *ApproveOrderRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *ApproveOrderRequest) GetOrderMessage() *OrderMessage {
	if x != nil {
		return x.OrderMessage
	}
	return nil
}

type MessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=Message,json=message,proto3" json:"Message,omitempty"`
}

func (x *MessageResponse) Reset() {
	*x = MessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_order_order_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageResponse) ProtoMessage() {}

func (x *MessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_order_order_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageResponse.ProtoReflect.Descriptor instead.
func (*MessageResponse) Descriptor() ([]byte, []int) {
	return file_proto_order_order_proto_rawDescGZIP(), []int{17}
}

func (x *MessageResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type OrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string         `protobuf:"bytes,1,opt,name=Message,json=message,proto3" json:"Message,omitempty"`
	Order   *OrderDocument `protobuf:"bytes,2,opt,name=Order,json=order,proto3" json:"Order,omitempty"`
}

func (x *OrderResponse) Reset() {
	*x = OrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_order_order_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderResponse) ProtoMessage() {}

func (x *OrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_order_order_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderResponse.ProtoReflect.Descriptor instead.
func (*OrderResponse) Descriptor() ([]byte, []int) {
	return file_proto_order_order_proto_rawDescGZIP(), []int{18}
}

func (x *OrderResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *OrderResponse) GetOrder() *OrderDocument {
	if x != nil {
		return x.Order
	}
	return nil
}

type PaymentIntentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message         string `protobuf:"bytes,1,opt,name=Message,json=message,proto3" json:"Message,omitempty"`
	ClientSecret    string `protobuf:"bytes,2,opt,name=ClientSecret,json=clientSecret,proto3" json:"ClientSecret,omitempty"`
	PaymentIntentId string `protobuf:"bytes,3,opt,name=PaymentIntentId,json=paymentIntentId,proto3" json:"PaymentIntentId,omitempty"`
}

func (x *PaymentIntentResponse) Reset() {
	*x = PaymentIntentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_order_order_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentIntentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentIntentResponse) ProtoMessage() {}

func (x *PaymentIntentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_order_order_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentIntentResponse.ProtoReflect.Descriptor instead.
func (*PaymentIntentResponse) Descriptor() ([]byte, []int) {
	return file_proto_order_order_proto_rawDescGZIP(), []int{19}
}

func (x *PaymentIntentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PaymentIntentResponse) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

func (x *PaymentIntentResponse) GetPaymentIntentId() string {
	if x != nil {
		return x.PaymentIntentId
	}
	return ""
}

type OrdersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string           `protobuf:"bytes,1,opt,name=Message,json=message,proto3" json:"Message,omitempty"`
	Orders  []*OrderDocument `protobuf:"bytes,2,rep,name=Orders,json=orders,proto3" json:"Orders,omitempty"`
}

func (x *OrdersResponse) Reset() {
	*x = OrdersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_order_order_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrdersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrdersResponse) ProtoMessage() {}

func (x *OrdersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_order_order_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrdersResponse.ProtoReflect.Descriptor instead.
func (*OrdersResponse) Descriptor() ([]byte, []int) {
	return file_proto_order_order_proto_rawDescGZIP(), []int{20}
}

func (x *OrdersResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *OrdersResponse) GetOrders() []*OrderDocument {
	if x != nil {
		return x.Orders
	}
	return nil
}

var File_proto_order_order_proto protoreflect.FileDescriptor

var file_proto_order_order_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x1a, 0x20, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x2f, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xc2, 0x02, 0x0a, 0x0a, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x73, 0x12, 0x25,
	0x0a, 0x0b, 0x4f, 0x6e, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x4a, 0x6f, 0x62, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0b, 0x6f, 0x6e, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x4a, 0x6f,
	0x62, 0x73, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x4a, 0x6f, 0x62, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x0d,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x4a, 0x6f, 0x62, 0x73, 0x88, 0x01, 0x01,
	0x12, 0x29, 0x0a, 0x0d, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x45, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x48, 0x02, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x45, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x47,
	0x69, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52,
	0x08, 0x67, 0x69, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x42, 0x0a, 0x0e,
	0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x04, 0x52, 0x0e, 0x72,
	0x65, 0x63, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x88, 0x01, 0x01,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x4f, 0x6e, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x4a, 0x6f, 0x62, 0x73,
	0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x4a, 0x6f,
	0x62, 0x73, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x45, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x47, 0x69, 0x67, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x22, 0x9b, 0x01, 0x0a, 0x0f, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x47,
	0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x0a, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x70, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x73,
	0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x70, 0x73, 0x22, 0xa7, 0x02, 0x0a, 0x05, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x47, 0x69, 0x67, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x67, 0x69, 0x67, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x24, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x44, 0x61, 0x79,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x49, 0x6e, 0x44, 0x61, 0x79, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x4f, 0x6c, 0x64, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x6f, 0x6c, 0x64, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x28, 0x0a, 0x0f, 0x4e, 0x65, 0x77, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44,
	0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6e, 0x65, 0x77, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x63,
	0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x61, 0x63,
	0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x6c, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x6c, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x91, 0x01, 0x0a,
	0x0d, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x65, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x12, 0x18,
	0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x93, 0x02, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61,
	0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x65, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x42, 0x75, 0x79, 0x65, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x75, 0x79, 0x65, 0x72, 0x52, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x22, 0x51, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a,
	0x06, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0x83, 0x02, 0x0a, 0x10, 0x45, 0x78,
	0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x12, 0x3e,
	0x0a, 0x0c, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x34,
	0x0a, 0x07, 0x4e, 0x65, 0x77, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x44, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x01, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x44, 0x61, 0x74,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x79, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x64, 0x61, 0x79, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x12, 0x30, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x44,
	0x61, 0x74, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x4e, 0x65, 0x77, 0x44, 0x61, 0x74, 0x65, 0x22,
	0xcf, 0x0a, 0x0a, 0x0d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x49,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x47, 0x69, 0x67, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x67, 0x69, 0x67, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x26, 0x0a, 0x0e, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65, 0x6c, 0x6c, 0x65,
	0x72, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x65, 0x6c,
	0x6c, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x53,
	0x65, 0x6c, 0x6c, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x24, 0x0a,
	0x0d, 0x47, 0x69, 0x67, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x67, 0x69, 0x67, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x47, 0x69, 0x67, 0x4d, 0x61, 0x69, 0x6e, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x67, 0x69, 0x67, 0x4d, 0x61,
	0x69, 0x6e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x47, 0x69, 0x67, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x67, 0x69, 0x67, 0x42, 0x61, 0x73, 0x69, 0x63, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x30, 0x0a,
	0x13, 0x47, 0x69, 0x67, 0x42, 0x61, 0x73, 0x69, 0x63, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x67, 0x69, 0x67, 0x42,
	0x61, 0x73, 0x69, 0x63, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x18, 0x0a, 0x07, 0x42, 0x75, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x62, 0x75, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x42, 0x75, 0x79,
	0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x62, 0x75, 0x79, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x42, 0x75, 0x79, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x79, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x1e, 0x0a, 0x0a, 0x42, 0x75, 0x79, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x79, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x51,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x65, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x65, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x65, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x6c, 0x65, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x6c, 0x65, 0x64, 0x12, 0x3a, 0x0a, 0x0a, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x48, 0x00, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x3c, 0x0a, 0x0b, 0x44, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64,
	0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x01, 0x52,
	0x0b, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x27, 0x0a, 0x05, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x48, 0x02, 0x52, 0x05,
	0x6f, 0x66, 0x66, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x3a, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x65, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x18, 0x1c, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x65,
	0x64, 0x57, 0x6f, 0x72, 0x6b, 0x52, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x65, 0x64,
	0x57, 0x6f, 0x72, 0x6b, 0x12, 0x2f, 0x0a, 0x06, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x1d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x48, 0x03, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x0b, 0x42, 0x75, 0x79, 0x65, 0x72, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x48, 0x04,
	0x52, 0x0b, 0x62, 0x75, 0x79, 0x65, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x88, 0x01, 0x01,
	0x12, 0x3b, 0x0a, 0x0c, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x48, 0x05, 0x52, 0x0c, 0x73, 0x65,
	0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x88, 0x01, 0x01, 0x12, 0x48, 0x0a,
	0x10, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x48, 0x06, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x41, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x64, 0x41, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x44, 0x61, 0x74, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x4f, 0x66, 0x66, 0x65, 0x72,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x42, 0x75, 0x79, 0x65, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x42, 0x0f, 0x0a, 0x0d, 0x5f,
	0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x42, 0x13, 0x0a, 0x11,
	0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x22, 0xba, 0x0c, 0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x1f, 0x0a, 0x08, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x42, 0x75, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x62, 0x75, 0x79, 0x65, 0x72, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x4f, 0x6e, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x4a, 0x6f, 0x62,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x0b, 0x6f, 0x6e, 0x67, 0x6f, 0x69,
	0x6e, 0x67, 0x4a, 0x6f, 0x62, 0x73, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0d, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x4a, 0x6f, 0x62, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x03, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x4a, 0x6f, 0x62,
	0x73, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0d, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x45, 0x61, 0x72,
	0x6e, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x48, 0x04, 0x52, 0x0d, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x45, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x88, 0x01, 0x01, 0x12,
	0x29, 0x0a, 0x0d, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x64, 0x47, 0x69, 0x67, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x0d, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x64, 0x47, 0x69, 0x67, 0x73, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x88,
	0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x4c, 0x69, 0x6e, 0x6b, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x09, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x4c, 0x69,
	0x6e, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0b, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x29, 0x0a, 0x0d, 0x42, 0x75, 0x79, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0c, 0x52, 0x0d, 0x62, 0x75, 0x79,
	0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a,
	0x0e, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0d, 0x52, 0x0e, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0e, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0f, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x79, 0x73, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x10, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61,
	0x79, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x48, 0x11, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x48, 0x12, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x44, 0x75, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x13, 0x52, 0x08, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x44, 0x75, 0x65, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c, 0x52, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x48, 0x14,
	0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x88, 0x01,
	0x01, 0x12, 0x1f, 0x0a, 0x08, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x15, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x88,
	0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x44, 0x61,
	0x74, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x48, 0x16, 0x52, 0x0c, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x4e,
	0x65, 0x77, 0x44, 0x61, 0x74, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x48, 0x17, 0x52, 0x07,
	0x6e, 0x65, 0x77, 0x44, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x48, 0x18, 0x52, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x53, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x19, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x1a, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x1c, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x1b, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1d,
	0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x1c, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a,
	0x0a, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x65, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x1d, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x65, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0e, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x1e, 0x52, 0x0e, 0x72, 0x65,
	0x63, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x88, 0x01, 0x01, 0x12,
	0x29, 0x0a, 0x0d, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x48, 0x1f, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x53,
	0x65, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x42, 0x75, 0x79, 0x65,
	0x72, 0x49, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x4f, 0x6e, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x4a,
	0x6f, 0x62, 0x73, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x4a, 0x6f, 0x62, 0x73, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x45,
	0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x50, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x64, 0x47, 0x69, 0x67, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x54, 0x79,
	0x70, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x4f, 0x66, 0x66, 0x65,
	0x72, 0x4c, 0x69, 0x6e, 0x6b, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x42, 0x75, 0x79, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x55, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x0f, 0x0a, 0x0d, 0x5f, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x79, 0x73,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x44, 0x75, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x52, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x55, 0x72, 0x6c, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x61, 0x6c, 0x44, 0x61, 0x74, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x4e, 0x65, 0x77, 0x44, 0x61,
	0x74, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x65, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x52, 0x65,
	0x63, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x42, 0x10, 0x0a, 0x0e,
	0x5f, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x46,
	0x0a, 0x14, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x42, 0x75, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62,
	0x75, 0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0x8b, 0x01, 0x0a, 0x12, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a,
	0x0f, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x31, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x22, 0x79, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x10, 0x45, 0x78,
	0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x64, 0x65, 0x64, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x10, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x22,
	0x1d, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xa9,
	0x01, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x33, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1b, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x89, 0x01, 0x0a, 0x13, 0x44,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x65, 0x64, 0x12, 0x3a, 0x0a, 0x0d, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x65, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x65, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x52, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x65, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x22, 0x8d, 0x01, 0x0a, 0x12, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x37, 0x0a,
	0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x68, 0x0a, 0x13, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x2b, 0x0a, 0x0f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x55, 0x0a,
	0x0d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x22, 0x7f, 0x0a, 0x15, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x58, 0x0a, 0x0e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x2c, 0x0a, 0x06, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2a,
	0x50, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x69, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x10, 0x02,
	0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x10,
	0x03, 0x2a, 0x2f, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74,
	0x10, 0x01, 0x32, 0x8f, 0x06, 0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x14, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x1a, 0x14, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x06, 0x49, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x1b, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x12, 0x12,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79,
	0x49, 0x64, 0x1a, 0x14, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53,
	0x65, 0x6c, 0x6c, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x12, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x49, 0x64, 0x1a,
	0x15, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x79,
	0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x12, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x49, 0x64, 0x1a, 0x15, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x45, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40,
	0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1a,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x40, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x1a, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x19, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0c, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x14, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x12, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x49, 0x64, 0x1a, 0x14, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x30, 0x01, 0x12, 0x3e, 0x0a, 0x10, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x12, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x49, 0x64, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x74, 0x68, 0x65, 0x74, 0x68, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x74, 0x6f, 0x6e,
	0x2f, 0x6a, 0x6f, 0x62, 0x62, 0x65, 0x72, 0x2d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_order_order_proto_rawDescOnce sync.Once
	file_proto_order_order_proto_rawDescData = file_proto_order_order_proto_rawDesc
)

func file_proto_order_order_proto_rawDescGZIP() []byte {
	file_proto_order_order_proto_rawDescOnce.Do(func() {
		file_proto_order_order_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_order_order_proto_rawDescData)
	})
	return file_proto_order_order_proto_rawDescData
}

var file_proto_order_order_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_order_order_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_proto_order_order_proto_goTypes = []interface{}{
	(Action)(0),                      // 0: order.Action
	(DeliveryChangeAction)(0),        // 1: order.DeliveryChangeAction
	(*OrderProps)(nil),               // 2: order.OrderProps
	(*SellerGigUpdate)(nil),          // 3: order.SellerGigUpdate
	(*Offer)(nil),                    // 4: order.Offer
	(*DeliveredWork)(nil),            // 5: order.DeliveredWork
	(*OrderEvents)(nil),              // 6: order.OrderEvents
	(*OrderReview)(nil),              // 7: order.OrderReview
	(*ExtendedDelivery)(nil),         // 8: order.ExtendedDelivery
	(*OrderDocument)(nil),            // 9: order.OrderDocument
	(*OrderMessage)(nil),             // 10: order.OrderMessage
	(*PaymentIntentRequest)(nil),     // 11: order.PaymentIntentRequest
	(*OrderCancelRequest)(nil),       // 12: order.OrderCancelRequest
	(*DeliveryExtensionRequest)(nil), // 13: order.DeliveryExtensionRequest
	(*RequestById)(nil),              // 14: order.RequestById
	(*DeliveryDateRequest)(nil),      // 15: order.DeliveryDateRequest
	(*DeliverOrderRequest)(nil),      // 16: order.DeliverOrderRequest
	(*CancelOrderRequest)(nil),       // 17: order.CancelOrderRequest
	(*ApproveOrderRequest)(nil),      // 18: order.ApproveOrderRequest
	(*MessageResponse)(nil),          // 19: order.MessageResponse
	(*OrderResponse)(nil),            // 20: order.OrderResponse
	(*PaymentIntentResponse)(nil),    // 21: order.PaymentIntentResponse
	(*OrdersResponse)(nil),           // 22: order.OrdersResponse
	(*datetime.DateTime)(nil),        // 23: google.type.DateTime
	(*emptypb.Empty)(nil),            // 24: google.protobuf.Empty
}
var file_proto_order_order_proto_depIdxs = []int32{
	23, // 0: order.OrderProps.RecentDelivery:type_name -> google.type.DateTime
	0,  // 1: order.SellerGigUpdate.Action:type_name -> order.Action
	2,  // 2: order.SellerGigUpdate.OrderProps:type_name -> order.OrderProps
	23, // 3: order.ExtendedDelivery.OriginalDate:type_name -> google.type.DateTime
	23, // 4: order.ExtendedDelivery.NewDate:type_name -> google.type.DateTime
	23, // 5: order.OrderDocument.ApprovedAt:type_name -> google.type.DateTime
	23, // 6: order.OrderDocument.DateOrdered:type_name -> google.type.DateTime
	4,  // 7: order.OrderDocument.Offer:type_name -> order.Offer
	5,  // 8: order.OrderDocument.DeliveredWork:type_name -> order.DeliveredWork
	6,  // 9: order.OrderDocument.Events:type_name -> order.OrderEvents
	7,  // 10: order.OrderDocument.BuyerReview:type_name -> order.OrderReview
	7,  // 11: order.OrderDocument.SellerReview:type_name -> order.OrderReview
	8,  // 12: order.OrderDocument.RequestExtension:type_name -> order.ExtendedDelivery
	10, // 13: order.OrderCancelRequest.OrderData:type_name -> order.OrderMessage
	8,  // 14: order.DeliveryExtensionRequest.ExtendedDelivery:type_name -> order.ExtendedDelivery
	1,  // 15: order.DeliveryDateRequest.Action:type_name -> order.DeliveryChangeAction
	8,  // 16: order.DeliveryDateRequest.RequestExtension:type_name -> order.ExtendedDelivery
	5,  // 17: order.DeliverOrderRequest.DeliveredWork:type_name -> order.DeliveredWork
	10, // 18: order.CancelOrderRequest.OrderMessage:type_name -> order.OrderMessage
	10, // 19: order.ApproveOrderRequest.OrderMessage:type_name -> order.OrderMessage
	9,  // 20: order.OrderResponse.Order:type_name -> order.OrderDocument
	9,  // 21: order.OrdersResponse.Orders:type_name -> order.OrderDocument
	9,  // 22: order.OrderService.Create:input_type -> order.OrderDocument
	11, // 23: order.OrderService.Intent:input_type -> order.PaymentIntentRequest
	14, // 24: order.OrderService.GetOrderById:input_type -> order.RequestById
	14, // 25: order.OrderService.GetSellerOrders:input_type -> order.RequestById
	14, // 26: order.OrderService.GetBuyerOrders:input_type -> order.RequestById
	13, // 27: order.OrderService.RequestExtension:input_type -> order.DeliveryExtensionRequest
	15, // 28: order.OrderService.DeliveryDate:input_type -> order.DeliveryDateRequest
	16, // 29: order.OrderService.DeliverOrder:input_type -> order.DeliverOrderRequest
	17, // 30: order.OrderService.CancelOrder:input_type -> order.CancelOrderRequest
	18, // 31: order.OrderService.ApproveOrder:input_type -> order.ApproveOrderRequest
	14, // 32: order.OrderService.SubscribeOrder:input_type -> order.RequestById
	14, // 33: order.OrderService.UnsubscribeOrder:input_type -> order.RequestById
	20, // 34: order.OrderService.Create:output_type -> order.OrderResponse
	21, // 35: order.OrderService.Intent:output_type -> order.PaymentIntentResponse
	20, // 36: order.OrderService.GetOrderById:output_type -> order.OrderResponse
	22, // 37: order.OrderService.GetSellerOrders:output_type -> order.OrdersResponse
	22, // 38: order.OrderService.GetBuyerOrders:output_type -> order.OrdersResponse
	20, // 39: order.OrderService.RequestExtension:output_type -> order.OrderResponse
	20, // 40: order.OrderService.DeliveryDate:output_type -> order.OrderResponse
	20, // 41: order.OrderService.DeliverOrder:output_type -> order.OrderResponse
	19, // 42: order.OrderService.CancelOrder:output_type -> order.MessageResponse
	20, // 43: order.OrderService.ApproveOrder:output_type -> order.OrderResponse
	9,  // 44: order.OrderService.SubscribeOrder:output_type -> order.OrderDocument
	24, // 45: order.OrderService.UnsubscribeOrder:output_type -> google.protobuf.Empty
	34, // [34:46] is the sub-list for method output_type
	22, // [22:34] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_proto_order_order_proto_init() }
func file_proto_order_order_proto_init() {
	if File_proto_order_order_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_order_order_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderProps); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_order_order_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SellerGigUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_order_order_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Offer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_order_order_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliveredWork); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_order_order_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderEvents); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_order_order_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderReview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_order_order_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtendedDelivery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_order_order_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderDocument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_order_order_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_order_order_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentIntentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_order_order_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCancelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_order_order_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliveryExtensionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_order_order_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestById); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_order_order_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliveryDateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_order_order_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliverOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_order_order_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_order_order_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApproveOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_order_order_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_order_order_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_order_order_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentIntentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_order_order_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrdersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_order_order_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_proto_order_order_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_proto_order_order_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_proto_order_order_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_proto_order_order_proto_msgTypes[8].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_order_order_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_order_order_proto_goTypes,
		DependencyIndexes: file_proto_order_order_proto_depIdxs,
		EnumInfos:         file_proto_order_order_proto_enumTypes,
		MessageInfos:      file_proto_order_order_proto_msgTypes,
	}.Build()
	File_proto_order_order_proto = out.File
	file_proto_order_order_proto_rawDesc = nil
	file_proto_order_order_proto_goTypes = nil
	file_proto_order_order_proto_depIdxs = nil
}
