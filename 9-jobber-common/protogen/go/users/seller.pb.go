// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.26.1
// source: proto/users/seller.proto

package users

import (
	review "github.com/thetherington/jobber-common/protogen/go/review"
	datetime "google.golang.org/genproto/googleapis/type/datetime"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetSellerByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=Id,json=id,proto3" json:"Id,omitempty"`
}

func (x *GetSellerByIdRequest) Reset() {
	*x = GetSellerByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_users_seller_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSellerByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSellerByIdRequest) ProtoMessage() {}

func (x *GetSellerByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_users_seller_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSellerByIdRequest.ProtoReflect.Descriptor instead.
func (*GetSellerByIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_users_seller_proto_rawDescGZIP(), []int{0}
}

func (x *GetSellerByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetSellerByUsernameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=Username,json=username,proto3" json:"Username,omitempty"`
}

func (x *GetSellerByUsernameRequest) Reset() {
	*x = GetSellerByUsernameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_users_seller_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSellerByUsernameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSellerByUsernameRequest) ProtoMessage() {}

func (x *GetSellerByUsernameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_users_seller_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSellerByUsernameRequest.ProtoReflect.Descriptor instead.
func (*GetSellerByUsernameRequest) Descriptor() ([]byte, []int) {
	return file_proto_users_seller_proto_rawDescGZIP(), []int{1}
}

func (x *GetSellerByUsernameRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type RandomSellersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Size int32 `protobuf:"varint,1,opt,name=Size,json=size,proto3" json:"Size,omitempty"`
}

func (x *RandomSellersRequest) Reset() {
	*x = RandomSellersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_users_seller_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RandomSellersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RandomSellersRequest) ProtoMessage() {}

func (x *RandomSellersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_users_seller_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RandomSellersRequest.ProtoReflect.Descriptor instead.
func (*RandomSellersRequest) Descriptor() ([]byte, []int) {
	return file_proto_users_seller_proto_rawDescGZIP(), []int{2}
}

func (x *RandomSellersRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type CreateUpdateSellerPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email           string         `protobuf:"bytes,1,opt,name=Email,json=email,proto3" json:"Email,omitempty"`
	ProfilePublicId string         `protobuf:"bytes,2,opt,name=ProfilePublicId,json=profilePublicId,proto3" json:"ProfilePublicId,omitempty"`
	ProfilePicture  string         `protobuf:"bytes,3,opt,name=ProfilePicture,json=profilePicture,proto3" json:"ProfilePicture,omitempty"`
	FullName        string         `protobuf:"bytes,4,opt,name=FullName,json=fullName,proto3" json:"FullName,omitempty"`
	Description     string         `protobuf:"bytes,5,opt,name=Description,json=description,proto3" json:"Description,omitempty"`
	Country         string         `protobuf:"bytes,6,opt,name=Country,json=country,proto3" json:"Country,omitempty"`
	Oneliner        string         `protobuf:"bytes,7,opt,name=Oneliner,json=oneliner,proto3" json:"Oneliner,omitempty"`
	ResponseTime    int32          `protobuf:"varint,8,opt,name=ResponseTime,json=responseTime,proto3" json:"ResponseTime,omitempty"`
	Skills          []string       `protobuf:"bytes,9,rep,name=Skills,json=skills,proto3" json:"Skills,omitempty"`
	Languages       []*Language    `protobuf:"bytes,10,rep,name=Languages,json=languages,proto3" json:"Languages,omitempty"`
	Experience      []*Experience  `protobuf:"bytes,11,rep,name=Experience,json=experience,proto3" json:"Experience,omitempty"`
	Education       []*Education   `protobuf:"bytes,12,rep,name=Education,json=eduction,proto3" json:"Education,omitempty"`
	Certificates    []*Certificate `protobuf:"bytes,13,rep,name=Certificates,json=certificates,proto3" json:"Certificates,omitempty"`
	SocialLinks     []string       `protobuf:"bytes,14,rep,name=SocialLinks,json=socialLinks,proto3" json:"SocialLinks,omitempty"`
}

func (x *CreateUpdateSellerPayload) Reset() {
	*x = CreateUpdateSellerPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_users_seller_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUpdateSellerPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUpdateSellerPayload) ProtoMessage() {}

func (x *CreateUpdateSellerPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_users_seller_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUpdateSellerPayload.ProtoReflect.Descriptor instead.
func (*CreateUpdateSellerPayload) Descriptor() ([]byte, []int) {
	return file_proto_users_seller_proto_rawDescGZIP(), []int{3}
}

func (x *CreateUpdateSellerPayload) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreateUpdateSellerPayload) GetProfilePublicId() string {
	if x != nil {
		return x.ProfilePublicId
	}
	return ""
}

func (x *CreateUpdateSellerPayload) GetProfilePicture() string {
	if x != nil {
		return x.ProfilePicture
	}
	return ""
}

func (x *CreateUpdateSellerPayload) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *CreateUpdateSellerPayload) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateUpdateSellerPayload) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *CreateUpdateSellerPayload) GetOneliner() string {
	if x != nil {
		return x.Oneliner
	}
	return ""
}

func (x *CreateUpdateSellerPayload) GetResponseTime() int32 {
	if x != nil {
		return x.ResponseTime
	}
	return 0
}

func (x *CreateUpdateSellerPayload) GetSkills() []string {
	if x != nil {
		return x.Skills
	}
	return nil
}

func (x *CreateUpdateSellerPayload) GetLanguages() []*Language {
	if x != nil {
		return x.Languages
	}
	return nil
}

func (x *CreateUpdateSellerPayload) GetExperience() []*Experience {
	if x != nil {
		return x.Experience
	}
	return nil
}

func (x *CreateUpdateSellerPayload) GetEducation() []*Education {
	if x != nil {
		return x.Education
	}
	return nil
}

func (x *CreateUpdateSellerPayload) GetCertificates() []*Certificate {
	if x != nil {
		return x.Certificates
	}
	return nil
}

func (x *CreateUpdateSellerPayload) GetSocialLinks() []string {
	if x != nil {
		return x.SocialLinks
	}
	return nil
}

type SeedSellersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seed int32 `protobuf:"varint,1,opt,name=Seed,json=seed,proto3" json:"Seed,omitempty"`
}

func (x *SeedSellersRequest) Reset() {
	*x = SeedSellersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_users_seller_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeedSellersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeedSellersRequest) ProtoMessage() {}

func (x *SeedSellersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_users_seller_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeedSellersRequest.ProtoReflect.Descriptor instead.
func (*SeedSellersRequest) Descriptor() ([]byte, []int) {
	return file_proto_users_seller_proto_rawDescGZIP(), []int{4}
}

func (x *SeedSellersRequest) GetSeed() int32 {
	if x != nil {
		return x.Seed
	}
	return 0
}

type UpdateSellerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string                     `protobuf:"bytes,1,opt,name=Id,json=id,proto3" json:"Id,omitempty"`
	Seller *CreateUpdateSellerPayload `protobuf:"bytes,2,opt,name=Seller,json=seller,proto3" json:"Seller,omitempty"`
}

func (x *UpdateSellerRequest) Reset() {
	*x = UpdateSellerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_users_seller_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSellerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSellerRequest) ProtoMessage() {}

func (x *UpdateSellerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_users_seller_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSellerRequest.ProtoReflect.Descriptor instead.
func (*UpdateSellerRequest) Descriptor() ([]byte, []int) {
	return file_proto_users_seller_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateSellerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateSellerRequest) GetSeller() *CreateUpdateSellerPayload {
	if x != nil {
		return x.Seller
	}
	return nil
}

type SellerPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string                   `protobuf:"bytes,1,opt,name=Id,json=id,proto3" json:"Id,omitempty"`
	Username         string                   `protobuf:"bytes,2,opt,name=Username,json=username,proto3" json:"Username,omitempty"`
	Email            string                   `protobuf:"bytes,3,opt,name=Email,json=email,proto3" json:"Email,omitempty"`
	ProfilePublicId  string                   `protobuf:"bytes,4,opt,name=ProfilePublicId,json=profilePublicId,proto3" json:"ProfilePublicId,omitempty"`
	ProfilePicture   string                   `protobuf:"bytes,5,opt,name=ProfilePicture,json=profilePicture,proto3" json:"ProfilePicture,omitempty"`
	FullName         string                   `protobuf:"bytes,6,opt,name=FullName,json=fullName,proto3" json:"FullName,omitempty"`
	Description      string                   `protobuf:"bytes,7,opt,name=Description,json=description,proto3" json:"Description,omitempty"`
	Country          string                   `protobuf:"bytes,8,opt,name=Country,json=country,proto3" json:"Country,omitempty"`
	Oneliner         string                   `protobuf:"bytes,9,opt,name=Oneliner,json=oneliner,proto3" json:"Oneliner,omitempty"`
	ResponseTime     int32                    `protobuf:"varint,10,opt,name=ResponseTime,json=responseTime,proto3" json:"ResponseTime,omitempty"`
	RatingsCount     int32                    `protobuf:"varint,11,opt,name=RatingsCount,json=ratingsCount,proto3" json:"RatingsCount,omitempty"`
	RatingsSum       int32                    `protobuf:"varint,12,opt,name=RatingsSum,json=ratingsSum,proto3" json:"RatingsSum,omitempty"`
	OngoingJobs      int32                    `protobuf:"varint,13,opt,name=OngoingJobs,json=ongoingJobs,proto3" json:"OngoingJobs,omitempty"`
	CompletedJobs    int32                    `protobuf:"varint,14,opt,name=CompletedJobs,json=completedJobs,proto3" json:"CompletedJobs,omitempty"`
	CancelledJobs    int32                    `protobuf:"varint,15,opt,name=CancelledJobs,json=cancelledJobs,proto3" json:"CancelledJobs,omitempty"`
	TotalEarnings    float32                  `protobuf:"fixed32,16,opt,name=TotalEarnings,json=totalEarnings,proto3" json:"TotalEarnings,omitempty"`
	TotalGigs        int32                    `protobuf:"varint,17,opt,name=TotalGigs,json=totalGigs,proto3" json:"TotalGigs,omitempty"`
	RecentDelivery   *datetime.DateTime       `protobuf:"bytes,18,opt,name=RecentDelivery,json=recentDelivery,proto3,oneof" json:"RecentDelivery,omitempty"`
	Skills           []string                 `protobuf:"bytes,19,rep,name=Skills,json=skills,proto3" json:"Skills,omitempty"`
	Languages        []*Language              `protobuf:"bytes,20,rep,name=Languages,json=languages,proto3" json:"Languages,omitempty"`
	Experience       []*Experience            `protobuf:"bytes,21,rep,name=Experience,json=experience,proto3" json:"Experience,omitempty"`
	Education        []*Education             `protobuf:"bytes,22,rep,name=Education,json=eduction,proto3" json:"Education,omitempty"`
	Certificates     []*Certificate           `protobuf:"bytes,23,rep,name=Certificates,json=certificates,proto3" json:"Certificates,omitempty"`
	SocialLinks      []string                 `protobuf:"bytes,24,rep,name=SocialLinks,json=socialLinks,proto3" json:"SocialLinks,omitempty"`
	CreatedAt        *datetime.DateTime       `protobuf:"bytes,25,opt,name=CreatedAt,json=createdAt,proto3,oneof" json:"CreatedAt,omitempty"`
	UpdatedAt        *datetime.DateTime       `protobuf:"bytes,26,opt,name=UpdatedAt,json=updatedAt,proto3,oneof" json:"UpdatedAt,omitempty"`
	RatingCategories *review.RatingCategories `protobuf:"bytes,27,opt,name=RatingCategories,json=ratingCategories,proto3" json:"RatingCategories,omitempty"`
}

func (x *SellerPayload) Reset() {
	*x = SellerPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_users_seller_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SellerPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SellerPayload) ProtoMessage() {}

func (x *SellerPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_users_seller_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SellerPayload.ProtoReflect.Descriptor instead.
func (*SellerPayload) Descriptor() ([]byte, []int) {
	return file_proto_users_seller_proto_rawDescGZIP(), []int{6}
}

func (x *SellerPayload) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SellerPayload) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SellerPayload) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SellerPayload) GetProfilePublicId() string {
	if x != nil {
		return x.ProfilePublicId
	}
	return ""
}

func (x *SellerPayload) GetProfilePicture() string {
	if x != nil {
		return x.ProfilePicture
	}
	return ""
}

func (x *SellerPayload) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *SellerPayload) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SellerPayload) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *SellerPayload) GetOneliner() string {
	if x != nil {
		return x.Oneliner
	}
	return ""
}

func (x *SellerPayload) GetResponseTime() int32 {
	if x != nil {
		return x.ResponseTime
	}
	return 0
}

func (x *SellerPayload) GetRatingsCount() int32 {
	if x != nil {
		return x.RatingsCount
	}
	return 0
}

func (x *SellerPayload) GetRatingsSum() int32 {
	if x != nil {
		return x.RatingsSum
	}
	return 0
}

func (x *SellerPayload) GetOngoingJobs() int32 {
	if x != nil {
		return x.OngoingJobs
	}
	return 0
}

func (x *SellerPayload) GetCompletedJobs() int32 {
	if x != nil {
		return x.CompletedJobs
	}
	return 0
}

func (x *SellerPayload) GetCancelledJobs() int32 {
	if x != nil {
		return x.CancelledJobs
	}
	return 0
}

func (x *SellerPayload) GetTotalEarnings() float32 {
	if x != nil {
		return x.TotalEarnings
	}
	return 0
}

func (x *SellerPayload) GetTotalGigs() int32 {
	if x != nil {
		return x.TotalGigs
	}
	return 0
}

func (x *SellerPayload) GetRecentDelivery() *datetime.DateTime {
	if x != nil {
		return x.RecentDelivery
	}
	return nil
}

func (x *SellerPayload) GetSkills() []string {
	if x != nil {
		return x.Skills
	}
	return nil
}

func (x *SellerPayload) GetLanguages() []*Language {
	if x != nil {
		return x.Languages
	}
	return nil
}

func (x *SellerPayload) GetExperience() []*Experience {
	if x != nil {
		return x.Experience
	}
	return nil
}

func (x *SellerPayload) GetEducation() []*Education {
	if x != nil {
		return x.Education
	}
	return nil
}

func (x *SellerPayload) GetCertificates() []*Certificate {
	if x != nil {
		return x.Certificates
	}
	return nil
}

func (x *SellerPayload) GetSocialLinks() []string {
	if x != nil {
		return x.SocialLinks
	}
	return nil
}

func (x *SellerPayload) GetCreatedAt() *datetime.DateTime {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SellerPayload) GetUpdatedAt() *datetime.DateTime {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *SellerPayload) GetRatingCategories() *review.RatingCategories {
	if x != nil {
		return x.RatingCategories
	}
	return nil
}

type SellerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string         `protobuf:"bytes,1,opt,name=Message,json=message,proto3" json:"Message,omitempty"`
	Seller  *SellerPayload `protobuf:"bytes,2,opt,name=Seller,json=seller,proto3" json:"Seller,omitempty"`
}

func (x *SellerResponse) Reset() {
	*x = SellerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_users_seller_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SellerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SellerResponse) ProtoMessage() {}

func (x *SellerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_users_seller_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SellerResponse.ProtoReflect.Descriptor instead.
func (*SellerResponse) Descriptor() ([]byte, []int) {
	return file_proto_users_seller_proto_rawDescGZIP(), []int{7}
}

func (x *SellerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SellerResponse) GetSeller() *SellerPayload {
	if x != nil {
		return x.Seller
	}
	return nil
}

type SellersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string           `protobuf:"bytes,1,opt,name=Message,json=message,proto3" json:"Message,omitempty"`
	Sellers []*SellerPayload `protobuf:"bytes,2,rep,name=Sellers,json=sellers,proto3" json:"Sellers,omitempty"`
}

func (x *SellersResponse) Reset() {
	*x = SellersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_users_seller_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SellersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SellersResponse) ProtoMessage() {}

func (x *SellersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_users_seller_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SellersResponse.ProtoReflect.Descriptor instead.
func (*SellersResponse) Descriptor() ([]byte, []int) {
	return file_proto_users_seller_proto_rawDescGZIP(), []int{8}
}

func (x *SellersResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SellersResponse) GetSellers() []*SellerPayload {
	if x != nil {
		return x.Sellers
	}
	return nil
}

type SeedSellerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=Message,json=message,proto3" json:"Message,omitempty"`
}

func (x *SeedSellerResponse) Reset() {
	*x = SeedSellerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_users_seller_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeedSellerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeedSellerResponse) ProtoMessage() {}

func (x *SeedSellerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_users_seller_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeedSellerResponse.ProtoReflect.Descriptor instead.
func (*SeedSellerResponse) Descriptor() ([]byte, []int) {
	return file_proto_users_seller_proto_rawDescGZIP(), []int{9}
}

func (x *SeedSellerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Language struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       *string `protobuf:"bytes,1,opt,name=Id,json=_id,proto3,oneof" json:"Id,omitempty"`
	Language string  `protobuf:"bytes,2,opt,name=Language,json=language,proto3" json:"Language,omitempty"`
	Level    string  `protobuf:"bytes,3,opt,name=Level,json=level,proto3" json:"Level,omitempty"`
}

func (x *Language) Reset() {
	*x = Language{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_users_seller_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Language) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Language) ProtoMessage() {}

func (x *Language) ProtoReflect() protoreflect.Message {
	mi := &file_proto_users_seller_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Language.ProtoReflect.Descriptor instead.
func (*Language) Descriptor() ([]byte, []int) {
	return file_proto_users_seller_proto_rawDescGZIP(), []int{10}
}

func (x *Language) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Language) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *Language) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

type Experience struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   *string `protobuf:"bytes,1,opt,name=Id,json=_id,proto3,oneof" json:"Id,omitempty"`
	Company              string  `protobuf:"bytes,2,opt,name=Company,json=company,proto3" json:"Company,omitempty"`
	Title                string  `protobuf:"bytes,3,opt,name=Title,json=title,proto3" json:"Title,omitempty"`
	StartDate            string  `protobuf:"bytes,4,opt,name=StartDate,json=startDate,proto3" json:"StartDate,omitempty"`
	EndDate              string  `protobuf:"bytes,5,opt,name=EndDate,json=endDate,proto3" json:"EndDate,omitempty"`
	Description          string  `protobuf:"bytes,6,opt,name=Description,json=description,proto3" json:"Description,omitempty"`
	CurrentlyWorkingHere bool    `protobuf:"varint,7,opt,name=CurrentlyWorkingHere,json=currentlyWorkingHere,proto3" json:"CurrentlyWorkingHere,omitempty"`
}

func (x *Experience) Reset() {
	*x = Experience{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_users_seller_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Experience) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Experience) ProtoMessage() {}

func (x *Experience) ProtoReflect() protoreflect.Message {
	mi := &file_proto_users_seller_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Experience.ProtoReflect.Descriptor instead.
func (*Experience) Descriptor() ([]byte, []int) {
	return file_proto_users_seller_proto_rawDescGZIP(), []int{11}
}

func (x *Experience) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Experience) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *Experience) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Experience) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *Experience) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *Experience) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Experience) GetCurrentlyWorkingHere() bool {
	if x != nil {
		return x.CurrentlyWorkingHere
	}
	return false
}

type Education struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         *string `protobuf:"bytes,1,opt,name=Id,json=_id,proto3,oneof" json:"Id,omitempty"`
	Country    string  `protobuf:"bytes,2,opt,name=Country,json=country,proto3" json:"Country,omitempty"`
	University string  `protobuf:"bytes,3,opt,name=University,json=university,proto3" json:"University,omitempty"`
	Title      string  `protobuf:"bytes,4,opt,name=Title,json=title,proto3" json:"Title,omitempty"`
	Major      string  `protobuf:"bytes,5,opt,name=Major,json=major,proto3" json:"Major,omitempty"`
	Year       string  `protobuf:"bytes,6,opt,name=Year,json=year,proto3" json:"Year,omitempty"`
}

func (x *Education) Reset() {
	*x = Education{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_users_seller_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Education) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Education) ProtoMessage() {}

func (x *Education) ProtoReflect() protoreflect.Message {
	mi := &file_proto_users_seller_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Education.ProtoReflect.Descriptor instead.
func (*Education) Descriptor() ([]byte, []int) {
	return file_proto_users_seller_proto_rawDescGZIP(), []int{12}
}

func (x *Education) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Education) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Education) GetUniversity() string {
	if x != nil {
		return x.University
	}
	return ""
}

func (x *Education) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Education) GetMajor() string {
	if x != nil {
		return x.Major
	}
	return ""
}

func (x *Education) GetYear() string {
	if x != nil {
		return x.Year
	}
	return ""
}

type Certificate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   *string `protobuf:"bytes,1,opt,name=Id,json=_id,proto3,oneof" json:"Id,omitempty"`
	Name string  `protobuf:"bytes,2,opt,name=Name,json=name,proto3" json:"Name,omitempty"`
	From string  `protobuf:"bytes,3,opt,name=From,json=from,proto3" json:"From,omitempty"`
	Year string  `protobuf:"bytes,4,opt,name=Year,json=year,proto3" json:"Year,omitempty"`
}

func (x *Certificate) Reset() {
	*x = Certificate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_users_seller_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Certificate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Certificate) ProtoMessage() {}

func (x *Certificate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_users_seller_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Certificate.ProtoReflect.Descriptor instead.
func (*Certificate) Descriptor() ([]byte, []int) {
	return file_proto_users_seller_proto_rawDescGZIP(), []int{13}
}

func (x *Certificate) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Certificate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Certificate) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *Certificate) GetYear() string {
	if x != nil {
		return x.Year
	}
	return ""
}

var File_proto_users_seller_proto protoreflect.FileDescriptor

var file_proto_users_seller_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x73, 0x65,
	0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x1a, 0x20, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x74, 0x79, 0x70, 0x65, 0x2f, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x26,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x38, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6c,
	0x6c, 0x65, 0x72, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x2a, 0x0a, 0x14, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x9e, 0x04, 0x0a,
	0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6c,
	0x6c, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x28, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x6e,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x6e,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x6b,
	0x69, 0x6c, 0x6c, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6b, 0x69, 0x6c,
	0x6c, 0x73, 0x12, 0x2d, 0x0a, 0x09, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x4c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x73, 0x12, 0x31, 0x0a, 0x0a, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x18,
	0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x45, 0x78,
	0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69,
	0x65, 0x6e, 0x63, 0x65, 0x12, 0x2d, 0x0a, 0x09, 0x45, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e,
	0x45, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x65, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x0c, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x2e, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x63,
	0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x53,
	0x6f, 0x63, 0x69, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0b, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x22, 0x28, 0x0a,
	0x12, 0x53, 0x65, 0x65, 0x64, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x65, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x73, 0x65, 0x65, 0x64, 0x22, 0x5f, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x38,
	0x0a, 0x06, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x52, 0x06, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x22, 0xe1, 0x08, 0x0a, 0x0d, 0x53, 0x65, 0x6c,
	0x6c, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x28, 0x0a, 0x0f,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x46, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x6e, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x6e, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x53, 0x75, 0x6d, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x53, 0x75, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x6e,
	0x67, 0x6f, 0x69, 0x6e, 0x67, 0x4a, 0x6f, 0x62, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x6f, 0x6e, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x4a, 0x6f, 0x62, 0x73, 0x12, 0x24, 0x0a, 0x0d,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x4a, 0x6f, 0x62, 0x73, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x4a, 0x6f,
	0x62, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x4a,
	0x6f, 0x62, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x6c, 0x65, 0x64, 0x4a, 0x6f, 0x62, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x45, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x45, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x47, 0x69, 0x67, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x47, 0x69, 0x67, 0x73, 0x12, 0x42, 0x0a, 0x0e,
	0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x72,
	0x65, 0x63, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x88, 0x01, 0x01,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x13, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x12, 0x2d, 0x0a, 0x09, 0x4c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x09, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x0a, 0x45, 0x78, 0x70, 0x65, 0x72,
	0x69, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x15, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0a,
	0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x2d, 0x0a, 0x09, 0x45, 0x64,
	0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x16, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x45, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x08, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x0c, 0x43, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x18, 0x17, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x52, 0x0c, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x73, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x73,
	0x18, 0x18, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x4c, 0x69,
	0x6e, 0x6b, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x01, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x38, 0x0a,
	0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x44,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x02, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x44, 0x0a, 0x10, 0x52, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x1b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x52, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x10, 0x72, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x42, 0x11, 0x0a,
	0x0f, 0x5f, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x58, 0x0a, 0x0e,
	0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x53, 0x65, 0x6c, 0x6c,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x2e, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x06,
	0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x22, 0x5b, 0x0a, 0x0f, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x53, 0x65, 0x6c,
	0x6c, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x73, 0x65, 0x6c, 0x6c,
	0x65, 0x72, 0x73, 0x22, 0x2e, 0x0a, 0x12, 0x53, 0x65, 0x65, 0x64, 0x53, 0x65, 0x6c, 0x6c, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x59, 0x0a, 0x08, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12,
	0x14, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x5f,
	0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x64, 0x22, 0xe7,
	0x01, 0x0a, 0x0a, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a,
	0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x5f, 0x69, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a,
	0x14, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e,
	0x67, 0x48, 0x65, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x65, 0x72,
	0x65, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x64, 0x22, 0xa2, 0x01, 0x0a, 0x09, 0x45, 0x64, 0x75,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x5f, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x6e, 0x69, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x61, 0x6a,
	0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x59, 0x65, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x64, 0x22, 0x66, 0x0a,
	0x0b, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x02,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x5f, 0x69, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x59, 0x65,
	0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x42, 0x05,
	0x0a, 0x03, 0x5f, 0x49, 0x64, 0x32, 0xbf, 0x03, 0x0a, 0x0d, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x47, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x20, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6c, 0x6c,
	0x65, 0x72, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x15, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x2e, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x41, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72,
	0x12, 0x1a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x65, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72,
	0x42, 0x79, 0x49, 0x64, 0x12, 0x1b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x15, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53,
	0x65, 0x6c, 0x6c, 0x65, 0x72, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x21, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6c, 0x6c, 0x65,
	0x72, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x15, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x6c, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x12, 0x1b, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x53, 0x65, 0x6c, 0x6c,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x43, 0x0a, 0x0b, 0x53, 0x65, 0x65, 0x64, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72,
	0x73, 0x12, 0x19, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x53, 0x65, 0x65, 0x64, 0x53, 0x65,
	0x6c, 0x6c, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x2e, 0x53, 0x65, 0x65, 0x64, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x68, 0x65, 0x74, 0x68, 0x65, 0x72, 0x69, 0x6e, 0x67,
	0x74, 0x6f, 0x6e, 0x2f, 0x6a, 0x6f, 0x62, 0x62, 0x65, 0x72, 0x2d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_users_seller_proto_rawDescOnce sync.Once
	file_proto_users_seller_proto_rawDescData = file_proto_users_seller_proto_rawDesc
)

func file_proto_users_seller_proto_rawDescGZIP() []byte {
	file_proto_users_seller_proto_rawDescOnce.Do(func() {
		file_proto_users_seller_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_users_seller_proto_rawDescData)
	})
	return file_proto_users_seller_proto_rawDescData
}

var file_proto_users_seller_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_proto_users_seller_proto_goTypes = []interface{}{
	(*GetSellerByIdRequest)(nil),       // 0: users.GetSellerByIdRequest
	(*GetSellerByUsernameRequest)(nil), // 1: users.GetSellerByUsernameRequest
	(*RandomSellersRequest)(nil),       // 2: users.RandomSellersRequest
	(*CreateUpdateSellerPayload)(nil),  // 3: users.CreateUpdateSellerPayload
	(*SeedSellersRequest)(nil),         // 4: users.SeedSellersRequest
	(*UpdateSellerRequest)(nil),        // 5: users.UpdateSellerRequest
	(*SellerPayload)(nil),              // 6: users.SellerPayload
	(*SellerResponse)(nil),             // 7: users.SellerResponse
	(*SellersResponse)(nil),            // 8: users.SellersResponse
	(*SeedSellerResponse)(nil),         // 9: users.SeedSellerResponse
	(*Language)(nil),                   // 10: users.Language
	(*Experience)(nil),                 // 11: users.Experience
	(*Education)(nil),                  // 12: users.Education
	(*Certificate)(nil),                // 13: users.Certificate
	(*datetime.DateTime)(nil),          // 14: google.type.DateTime
	(*review.RatingCategories)(nil),    // 15: review.RatingCategories
}
var file_proto_users_seller_proto_depIdxs = []int32{
	10, // 0: users.CreateUpdateSellerPayload.Languages:type_name -> users.Language
	11, // 1: users.CreateUpdateSellerPayload.Experience:type_name -> users.Experience
	12, // 2: users.CreateUpdateSellerPayload.Education:type_name -> users.Education
	13, // 3: users.CreateUpdateSellerPayload.Certificates:type_name -> users.Certificate
	3,  // 4: users.UpdateSellerRequest.Seller:type_name -> users.CreateUpdateSellerPayload
	14, // 5: users.SellerPayload.RecentDelivery:type_name -> google.type.DateTime
	10, // 6: users.SellerPayload.Languages:type_name -> users.Language
	11, // 7: users.SellerPayload.Experience:type_name -> users.Experience
	12, // 8: users.SellerPayload.Education:type_name -> users.Education
	13, // 9: users.SellerPayload.Certificates:type_name -> users.Certificate
	14, // 10: users.SellerPayload.CreatedAt:type_name -> google.type.DateTime
	14, // 11: users.SellerPayload.UpdatedAt:type_name -> google.type.DateTime
	15, // 12: users.SellerPayload.RatingCategories:type_name -> review.RatingCategories
	6,  // 13: users.SellerResponse.Seller:type_name -> users.SellerPayload
	6,  // 14: users.SellersResponse.Sellers:type_name -> users.SellerPayload
	3,  // 15: users.SellerService.CreateSeller:input_type -> users.CreateUpdateSellerPayload
	5,  // 16: users.SellerService.UpdateSeller:input_type -> users.UpdateSellerRequest
	0,  // 17: users.SellerService.GetSellerById:input_type -> users.GetSellerByIdRequest
	1,  // 18: users.SellerService.GetSellerByUsername:input_type -> users.GetSellerByUsernameRequest
	2,  // 19: users.SellerService.GetRandomSellers:input_type -> users.RandomSellersRequest
	4,  // 20: users.SellerService.SeedSellers:input_type -> users.SeedSellersRequest
	7,  // 21: users.SellerService.CreateSeller:output_type -> users.SellerResponse
	7,  // 22: users.SellerService.UpdateSeller:output_type -> users.SellerResponse
	7,  // 23: users.SellerService.GetSellerById:output_type -> users.SellerResponse
	7,  // 24: users.SellerService.GetSellerByUsername:output_type -> users.SellerResponse
	8,  // 25: users.SellerService.GetRandomSellers:output_type -> users.SellersResponse
	9,  // 26: users.SellerService.SeedSellers:output_type -> users.SeedSellerResponse
	21, // [21:27] is the sub-list for method output_type
	15, // [15:21] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_proto_users_seller_proto_init() }
func file_proto_users_seller_proto_init() {
	if File_proto_users_seller_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_users_seller_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSellerByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_users_seller_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSellerByUsernameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_users_seller_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RandomSellersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_users_seller_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUpdateSellerPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_users_seller_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeedSellersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_users_seller_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSellerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_users_seller_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SellerPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_users_seller_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SellerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_users_seller_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SellersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_users_seller_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeedSellerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_users_seller_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Language); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_users_seller_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Experience); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_users_seller_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Education); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_users_seller_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Certificate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_users_seller_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_proto_users_seller_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_proto_users_seller_proto_msgTypes[11].OneofWrappers = []interface{}{}
	file_proto_users_seller_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_proto_users_seller_proto_msgTypes[13].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_users_seller_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_users_seller_proto_goTypes,
		DependencyIndexes: file_proto_users_seller_proto_depIdxs,
		MessageInfos:      file_proto_users_seller_proto_msgTypes,
	}.Build()
	File_proto_users_seller_proto = out.File
	file_proto_users_seller_proto_rawDesc = nil
	file_proto_users_seller_proto_goTypes = nil
	file_proto_users_seller_proto_depIdxs = nil
}
